{"version":3,"sources":["components/UI/LoadingSpinner.module.css","components/Profile/UserProfile.module.css","components/ContactPage.module.css","components/AddNewQuote.module.css","components/UI/BurgerMenu.module.css","components/Quote.module.css","context/auth-context.js","store/ui-slice.js","components/UI/Hamburger.js","components/Navbar.js","store/quote-slice.js","components/Quote.js","components/UI/LoadingSpinner.js","components/MainContet.js","components/AddNewQuote.js","components/AuthPage.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/UI/DarkModeButton.js","components/UI/BurgerMenu.js","components/UI/Modal.js","components/comments/CommentEditForm.js","components/comments/Comment.js","components/comments/AddComment.js","components/comments/CommentsList.js","components/QuotePage.js","store/comments-actions.js","components/ContactPage.js","components/UI/Notification.js","App.js","store/quote-actions.js","store/index.js","index.js","components/UI/Modal.module.css","components/UI/Notification.module.css","components/AuthPage.module.css","components/comments/Comment.module.css","components/comments/CommentList.module.css","components/UI/Hamburger.module.css","components/Profile/ProfileForm.module.css","components/comments/AddComment.module.css","components/Navbar.module.css","components/MainContent.module.css","components/UI/DarkModeButton.module.css","components/comments/CommentEditForm.module.css","App.module.css","components/QuotePage.module.css"],"names":["module","exports","logoutTimer","AuthContext","React","createContext","token","isLoggedIn","userId","userName","email","login","expirationTime","logout","calculateRemainingTime","currentTime","Date","getTime","AuthContextProvider","props","initialToken","initialUserId","initialUserName","initialUserEmail","tokenData","storedToken","localStorage","getItem","storedUserId","storedUserName","storedEmail","storedExpirationtime","remainingTime","removeItem","userEmail","duration","retriveStoredToken","useState","setToken","setUserId","setUserName","setUserEmail","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","Provider","value","children","uiSlice","createSlice","name","initialState","isBurgerMenuOpen","isModalOpen","isDarkMode","notification","isNotificationOpen","message","status","title","reducers","toggleBurgerMenu","state","closeModal","openNotification","action","payload","closeNotification","toggleDarkMode","uiActions","actions","Hamburger","useSelector","ui","dispatch","useDispatch","className","classes","burger","onClick","open","closed","Navbar","authCtx","useContext","header","burgerAndTitle","to","nav","cog","class","quotesSlice","quotesChanged","commentsChanged","quotesAreLoading","commentsAreLoading","isSortAscending","quotes","comments","console","log","quotesIsLoading","quotesAreDownload","addQuote","newQuote","push","author","text","id","uuidv4","date","now","commentsAmount","vote","votedUpUsers","votedDownUsers","replaceQuotes","replaceComments","deleteQuote","deletedId","filter","quote","comment","voteForQuote","voteddQuoteId","votedValue","votedUser","votedQuoteIndex","findIndex","q","isAllreadyUpVoted","some","e","isAllreadyDownVoted","sortQuotes","sort","quoteA","quoteB","setSortingMethod","addComment","newComment","toLocaleDateString","existingCommentIndex","com","quoteIndex","undefined","length","deletecomment","deletedIndex","index","commentIndex","coment","editComment","editedQuoteId","editedCommentIndex","editedText","quotesActions","Quote","isAuth","isVotedUp","isVotedDown","voteHandler","container","quoteHeader","otroBlockquote","quoteFooter","votedUp","notVoted","votedDown","disabled","commentsIcon","deleteBtn","LoadingSpinner","spinner","MainContent","quoteIsLoading","clickHandler","sortMethod","list","map","sortButtons","schema","yup","shape","autor","required","min","matches","AddNewQuote","isAcordeonOpen","setAcordeonOpen","useForm","resolver","yupResolver","register","handleSubmit","reset","errors","formState","acordeon","prevState","icon","CSSTransition","in","timeout","mountOnEnter","unmountOnExit","classNames","enter","slideEnter","enterActive","slideEnterActive","exit","slideExit","exitActive","slideExitActive","acordeonContainer","onSubmit","data","enteredAutor","enteredQuote","user","form","htmlFor","type","invalid","error","submit","password","AuthPage","isLogin","setIsLogin","isLoading","setIsLoading","history","useHistory","switchAuthModeHandler","url","enterdEmail","enteredPassword","fetch","method","body","JSON","stringify","returnSecureToken","headers","then","res","ok","json","errorMessage","Error","expiresIn","substring","lastIndexOf","idToken","localId","toISOString","replace","catch","err","icationOpen","newPassword","ProfileForm","placeholder","input","UserProfile","DarkModeButton","Button","dark","light","BurgerMenu","whoIsLogged","menu","exact","activeClassName","activeLink","fadeEnter","fadeEnterActive","fadeExit","fadeExitActive","overlay","Modal","modal","card","modalHeader","modalBtn","cross1","cross2","modalContent","CommentEditForm","editForm","label","rows","Comment","isEdit","setIsEdit","edittingHandler","commentHeader","mainComment","commentText","btn","AddComment","enteredText","commentBox","CommnetsLists","isCommentsOpen","setCommentsOpen","foundComment","c","commentsList","btnShowComments","QuotePage","useParams","a","fetchData","response","fetchedData","commentsData","selectedQuote","mainQuote","CommentsList","ContactPage","target","rel","href","Notification","specialClasses","success","info","cssClasses","content","isInitial","App","sendRequest","sendQuotesData","sendCommentsData","quotesData","darkMode","lightMode","fallback","path","store","configureStore","reducer","quoteSlice","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.7b5d34a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserProfile_container__9t3AY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactPage_list__15VnN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddNewQuote_container__3p5OR\",\"acordeon\":\"AddNewQuote_acordeon__vo_Vq\",\"icon\":\"AddNewQuote_icon__1bnyu\",\"open\":\"AddNewQuote_open__3N1RK\",\"closed\":\"AddNewQuote_closed__3prr-\",\"acordeonContainer\":\"AddNewQuote_acordeonContainer__1MBXY\",\"submit\":\"AddNewQuote_submit__4dOcB\",\"form\":\"AddNewQuote_form__2lwnQ\",\"quote\":\"AddNewQuote_quote__2eWYn\",\"error\":\"AddNewQuote_error__3m03G\",\"autor\":\"AddNewQuote_autor__1JD38\",\"invalid\":\"AddNewQuote_invalid__usDgP\",\"slideEnter\":\"AddNewQuote_slideEnter__1XDYV\",\"slideEnterActive\":\"AddNewQuote_slideEnterActive__1X7-h\",\"slideExit\":\"AddNewQuote_slideExit__va_nS\",\"slideExitActive\":\"AddNewQuote_slideExitActive__3DG7r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BurgerMenu_container__3TNTV\",\"menu\":\"BurgerMenu_menu__29vDv\",\"whoIsLogged\":\"BurgerMenu_whoIsLogged__3X9B_\",\"overlay\":\"BurgerMenu_overlay__YdjoS\",\"activeLink\":\"BurgerMenu_activeLink__29P7m\",\"slideEnter\":\"BurgerMenu_slideEnter__1CX9F\",\"slideEnterActive\":\"BurgerMenu_slideEnterActive__1vG9J\",\"slideExitActive\":\"BurgerMenu_slideExitActive__1P3x4\",\"fadeEnter\":\"BurgerMenu_fadeEnter__POTxZ\",\"fadeEnterActive\":\"BurgerMenu_fadeEnterActive__wjOKD\",\"fadeExit\":\"BurgerMenu_fadeExit__d6XPH\",\"fadeExitActive\":\"BurgerMenu_fadeExitActive__17V_1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Quote_container__3Blso\",\"quote\":\"Quote_quote__2eCbw\",\"quoteHeader\":\"Quote_quoteHeader__3VyFo\",\"quoteFooter\":\"Quote_quoteFooter__18FWT\",\"deleteBtn\":\"Quote_deleteBtn__1vOgx\",\"vote\":\"Quote_vote__2gkGG\",\"votedUp\":\"Quote_votedUp__37w3l\",\"votedDown\":\"Quote_votedDown__1CyqC\",\"notVoted\":\"Quote_notVoted__1H7Ve\",\"button\":\"Quote_button__tIVT1\",\"commentsIcon\":\"Quote_commentsIcon__2IHIO\",\"otroBlockquote\":\"Quote_otroBlockquote__3Ore6\"};","import React, { useState, useEffect, useCallback } from \"react\";\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  userId: \"\",\n  userName: \"\",\n  email: \"\",\n  login: (token, expirationTime) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retriveStoredToken = () => {\n  const storedToken = localStorage.getItem(\"token\");\n  const storedUserId = localStorage.getItem(\"userId\");\n  const storedUserName = localStorage.getItem(\"userName\");\n  const storedEmail = localStorage.getItem(\"userEmail\");\n  const storedExpirationtime = localStorage.getItem(\"expirationTime\");\n\n  const remainingTime = calculateRemainingTime(storedExpirationtime);\n\n  if (remainingTime <= 60000) {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"expirationTime\");\n    localStorage.removeItem(\"userName\");\n    localStorage.removeItem(\"userEmail\");\n    return null;\n  }\n\n  return {\n    token: storedToken,\n    userId: storedUserId,\n    userName: storedUserName,\n    userEmail: storedEmail,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retriveStoredToken();\n  let initialToken;\n  let initialUserId;\n  let initialUserName;\n  let initialUserEmail;\n  if (tokenData) {\n    initialToken = tokenData.token;\n    initialUserId = tokenData.userId;\n    initialUserName = tokenData.userName;\n    initialUserEmail = tokenData.userEmail;\n  }\n  const [token, setToken] = useState(initialToken);\n  const [userId, setUserId] = useState(initialUserId);\n  const [userName, setUserName] = useState(initialUserName);\n  const [userEmail, setUserEmail] = useState(initialUserEmail);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    setUserName(null);\n    setUserEmail(null);\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    localStorage.removeItem(\"userId\");\n    localStorage.removeItem(\"userName\");\n    localStorage.removeItem(\"userEmail\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, userId, expirationTime, userName, userEmail) => {\n    setToken(token);\n    setUserId(userId);\n    setUserName(userName);\n    setUserEmail(userEmail);\n\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"userId\", userId);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n    localStorage.setItem(\"userName\", userName);\n    localStorage.setItem(\"userEmail\", userEmail);\n\n    const remainingTime = calculateRemainingTime(expirationTime);\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    token,\n    isLoggedIn: userIsLoggedIn,\n    userId,\n    userName,\n    userEmail,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  isBurgerMenuOpen: false,\n  isModalOpen: true,\n  isDarkMode: false,\n  notification: {\n    isNotificationOpen: false,\n    message: \"\",\n    status: \"\",\n    title: \"\",\n  },\n};\n\nconst uiSlice = createSlice({\n  name: \"ui\",\n  initialState,\n  reducers: {\n    toggleBurgerMenu(state) {\n      state.isBurgerMenuOpen = !state.isBurgerMenuOpen;\n    },\n    closeModal(state) {\n      state.isModalOpen = false;\n    },\n    openNotification(state, action) {\n      state.notification = {\n        isNotificationOpen: true,\n        message: action.payload.message,\n        status: action.payload.status,\n        title: action.payload.title,\n      };\n    },\n    closeNotification(state) {\n      state.notification = {\n        isNotificationOpen: false,\n        message: state.notification.message,\n        status: state.notification.status,\n        title: state.notification.title,\n      };\n    },\n    toggleDarkMode(state) {\n      state.isDarkMode = !state.isDarkMode;\n    },\n  },\n});\nexport const uiActions = uiSlice.actions;\n\nexport default uiSlice;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport { useSelector } from \"react-redux\";\n\nimport classes from \"./Hamburger.module.css\";\n\nconst Hamburger = () => {\n  const isBurgerMenuOpen = useSelector((state) => state.ui.isBurgerMenuOpen);\n  const dispatch = useDispatch();\n\n  const clickHandler = () => {\n    dispatch(uiActions.toggleBurgerMenu());\n  };\n\n  return (\n    <>\n      <div className={classes.burger} onClick={clickHandler}>\n        <i className={isBurgerMenuOpen ? classes.open : classes.closed}></i>\n        <i className={isBurgerMenuOpen ? classes.open : classes.closed}></i>\n        <i className={isBurgerMenuOpen ? classes.open : classes.closed}></i>\n      </div>\n    </>\n  );\n};\n\nexport default Hamburger;\n","import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport AuthContext from \"../context/auth-context\";\nimport Hamburger from \"./UI/Hamburger\";\n\nimport classes from \"./Navbar.module.css\";\n// import { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../store/ui-slice\";\n\nconst Navbar = () => {\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n  const dispatch = useDispatch();\n\n  // const dispatch = useDispatch();\n\n  const logoutHandler = () => {\n    authCtx.logout();\n    //notification\n    dispatch(\n      uiActions.openNotification({\n        isNotificationOpen: true,\n        title: \"logout succesful\",\n        message: \"wylogowałeś się poprawnie\",\n        status: \"success\",\n      })\n    );\n    setTimeout(() => {\n      dispatch(uiActions.closeNotification());\n    }, 4000);\n  };\n\n  // const themeToggleHandler = () => {\n  //   dispatch(uiActions.toggleDarkMode());\n  // };\n  return (\n    <header className={classes.header}>\n      <div className={classes.burgerAndTitle}>\n        <Hamburger />\n\n        <Link to=\"/\">\n          <h1>Quotes</h1>\n        </Link>\n      </div>\n      <nav>\n        <ul className={classes.nav}>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/login\">\n                <p>Login/Sign In</p>\n              </Link>\n            </li>\n          )}\n          {/* {isLoggedIn && (\n            <li>\n              <p>witaj {authCtx.userName}</p>\n            </li>\n          )} */}\n          {isLoggedIn && (\n            <li className={classes.cog}>\n              <Link to=\"/profile\">\n                <i class=\"fas fa-cog\"></i>\n              </Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <p onClick={logoutHandler}>Logout</p>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Navbar;\n","import { createSlice, current } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst initialState = {\n  quotesChanged: false,\n  commentsChanged: false,\n  quotesAreLoading: false,\n  commentsAreLoading: false,\n  isSortAscending: false,\n  quotes: [],\n  comments: [],\n};\n\nconst quotesSlice = createSlice({\n  name: \"quotes\",\n  initialState,\n  reducers: {\n    quotesAreLoading(state, action) {\n      console.log(\"quotes loading...\");\n      state.quotesIsLoading = true;\n    },\n    quotesAreDownload(state, action) {\n      console.log(\"quotes download...\");\n      state.quotesIsLoading = false;\n    },\n    // commentsAreLoading(state, action) {\n    //   console.log(\"comments loading...\");\n    //   state.quotesIsLoading = true;\n    // },\n    // commentsAreDownload(state, action) {\n    //   console.log(\"comments download...\");\n    //   state.quotesIsLoading = false;\n    // },\n    addQuote(state, action) {\n      state.quotesChanged = true;\n      const newQuote = action.payload;\n      state.quotes.push({\n        author: newQuote.author,\n        text: newQuote.text,\n        id: uuidv4(),\n        date: Date.now(),\n        commentsAmount: 0,\n        userId: newQuote.userId,\n        userName: newQuote.userName,\n        vote: 0,\n        votedUpUsers: [\"\"],\n        votedDownUsers: [\"\"],\n      });\n    },\n    replaceQuotes(state, action) {\n      state.quotes = action.payload.quotes;\n    },\n\n    replaceComments(state, action) {\n      state.comments = action.payload.comments;\n    },\n    deleteQuote(state, action) {\n      state.quotesChanged = true;\n      const deletedId = action.payload;\n      state.quotes = state.quotes.filter((quote) => quote.id !== deletedId);\n      state.comments = state.comments.filter(\n        (comment) => comment.id !== deletedId\n      );\n    },\n    voteForQuote(state, action) {\n      state.quotesChanged = true;\n      const voteddQuoteId = action.payload.id;\n      const votedValue = action.payload.value;\n      const votedUser = action.payload.userId;\n      const votedQuoteIndex = state.quotes.findIndex(\n        (q) => q.id === voteddQuoteId\n      );\n\n      const isAllreadyUpVoted = state.quotes[votedQuoteIndex].votedUpUsers.some(\n        (e) => e === votedUser\n      );\n      const isAllreadyDownVoted = state.quotes[\n        votedQuoteIndex\n      ].votedDownUsers.some((e) => e === votedUser);\n\n      if (votedValue && isAllreadyUpVoted) {\n        // console.log(\"juz głosowałeś na plus i resetujesz plusa\");\n        state.quotes[votedQuoteIndex].vote -= 1;\n        state.quotes[votedQuoteIndex].votedUpUsers = state.quotes[\n          votedQuoteIndex\n        ].votedUpUsers.filter((id) => id !== votedUser);\n        return;\n      }\n\n      if (!votedValue && isAllreadyDownVoted) {\n        // console.log(\"juz głosowałeś na minus i resetujesz minusa\");\n        state.quotes[votedQuoteIndex].vote += 1;\n        state.quotes[votedQuoteIndex].votedDownUsers = state.quotes[\n          votedQuoteIndex\n        ].votedDownUsers.filter((id) => id !== votedUser);\n        return;\n      }\n\n      if (votedValue && isAllreadyDownVoted) {\n        state.quotes[votedQuoteIndex].vote += 2;\n        //removing user from votedDownUsers\n        state.quotes[votedQuoteIndex].votedDownUsers = state.quotes[\n          votedQuoteIndex\n        ].votedDownUsers.filter((id) => id !== votedUser);\n        //adding user to votedUpUsers\n        state.quotes[votedQuoteIndex].votedUpUsers.push(votedUser);\n        // console.log(\"najpierw minus pozniej plus\");\n        return;\n      }\n\n      if (!votedValue && isAllreadyUpVoted) {\n        state.quotes[votedQuoteIndex].vote -= 2;\n        //removig user form votedUpUsers\n        state.quotes[votedQuoteIndex].votedUpUsers = state.quotes[\n          votedQuoteIndex\n        ].votedUpUsers.filter((id) => id !== votedUser);\n        // adding user to votedDownUsers\n        state.quotes[votedQuoteIndex].votedDownUsers.push(votedUser);\n        // console.log(\"najpierw plus później minus\");\n        return;\n      }\n\n      if (votedValue) {\n        state.quotes[votedQuoteIndex].vote += 1;\n        state.quotes[votedQuoteIndex].votedUpUsers.push(votedUser);\n        console.log(\"plus pierwszy \");\n      } else {\n        state.quotes[votedQuoteIndex].vote -= 1;\n        state.quotes[votedQuoteIndex].votedDownUsers.push(votedUser);\n        console.log(\"minus pierwszy\");\n      }\n    },\n    sortQuotes(state) {\n      state.quotes.sort((quoteA, quoteB) => {\n        if (state.isSortAscending) {\n          return quoteA.vote > quoteB.vote ? 1 : -1;\n        } else {\n          return quoteA.vote < quoteB.vote ? 1 : -1;\n        }\n      });\n    },\n    setSortingMethod(state, action) {\n      state.isSortAscending = action.payload;\n    },\n    addComment(state, action) {\n      state.commentsChanged = true;\n      state.quotesChanged = true;\n\n      const newComment = {\n        text: action.payload.text,\n        date: new Date().toLocaleDateString(),\n        author: \"\",\n        userId: action.payload.userId,\n        userName: action.payload.userName,\n      };\n      // checking if quote have any comments, if comments have index with action.id\n      const existingCommentIndex = state.comments.findIndex(\n        (com) => com.id === action.payload.id\n      );\n      //checking quote index in quotes\n      const quoteIndex = state.quotes.findIndex(\n        (q) => q.id === action.payload.id\n      );\n\n      //if first comment then create array element with quote id\n      if (existingCommentIndex === -1) {\n        state.comments = [\n          ...state.comments,\n          {\n            id: action.payload.id,\n            comments: [newComment],\n          },\n        ];\n        // adding length of comments to quotes[index].commentsAmount\n        state.quotes[quoteIndex].commentsAmount = 1;\n      } else {\n        // case when all comments are removed so existing comment in array have id but there's no comments array inside\n        if (state.comments[existingCommentIndex].comments === undefined) {\n          state.comments[existingCommentIndex].comments = [];\n        }\n\n        state.comments[existingCommentIndex].comments.push(newComment);\n        // adding length of comments to quotes[index].commentsAmount\n        state.quotes[quoteIndex].commentsAmount =\n          state.comments[existingCommentIndex].comments.length;\n        // console.log(current(state.comments[existingQuoteIndex]));\n      }\n    },\n    deletecomment(state, action) {\n      state.commentsChanged = true;\n      const deletedId = action.payload.id;\n      const deletedIndex = action.payload.index;\n      const quoteIndex = state.quotes.findIndex(\n        (q) => q.id === action.payload.id\n      );\n\n      const commentIndex = state.comments.findIndex(\n        (com) => com.id === deletedId\n      );\n      state.comments[commentIndex].comments = state.comments[\n        commentIndex\n      ].comments.filter((coment, index) => index !== deletedIndex);\n\n      //updating commentsAmount in quote array\n      state.quotes[quoteIndex].commentsAmount =\n        state.comments[commentIndex].comments.length;\n    },\n    editComment(state, action) {\n      state.commentsChanged = true;\n      const editedQuoteId = action.payload.id;\n      const editedCommentIndex = action.payload.index;\n      const newComment = action.payload.editedText;\n\n      const commentIndex = state.comments.findIndex(\n        (com) => com.id === editedQuoteId\n      );\n\n      state.comments[commentIndex].comments[editedCommentIndex].text =\n        newComment;\n    },\n  },\n});\n\nexport const quotesActions = quotesSlice.actions;\n\nexport default quotesSlice;\n","import classes from \"./Quote.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useContext } from \"react\";\n\nimport AuthContext from \"../context/auth-context\";\n\nimport { quotesActions } from \"../store/quote-slice\";\nimport { uiActions } from \"../store/ui-slice\";\n\nconst Quote = (props) => {\n  const dispatch = useDispatch();\n  const authCtx = useContext(AuthContext);\n\n  const quote = useSelector((state) => state.quotes.quotes[props.index]);\n\n  const isAuth = authCtx.userId === quote.userId;\n\n  const isVotedUp = quote.votedUpUsers.some((e) => e === authCtx.userId);\n  const isVotedDown = quote.votedDownUsers.some((e) => e === authCtx.userId);\n\n  const deleteHandler = () => {\n    dispatch(quotesActions.deleteQuote(quote.id));\n    dispatch(\n      uiActions.openNotification({\n        isNotificationOpen: true,\n        message: \"Cytat został pomyslnie usuniety\",\n        title: \"Cytat został pomyslnie usuniety \",\n        status: \"success\",\n      })\n    );\n    setTimeout(() => {\n      dispatch(uiActions.closeNotification());\n    }, 4000);\n  };\n\n  const voteHandler = (value) => {\n    dispatch(\n      quotesActions.voteForQuote({\n        id: quote.id,\n        value,\n        userId: authCtx.userId,\n      })\n    );\n    dispatch(quotesActions.sortQuotes());\n  };\n\n  const canNotVoteHandler = () => {\n    dispatch(\n      uiActions.openNotification({\n        isNotificationOpen: true,\n        message: \"Tylko zalogowani użytkownicy mogą głosować\",\n        title: \"Musisz się zalogowac \",\n        status: \"info\",\n      })\n    );\n    setTimeout(() => {\n      dispatch(uiActions.closeNotification());\n    }, 4000);\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.quote}>\n        <div className={classes.quoteHeader}>\n          <p>dodał: {quote.userName}</p>\n        </div>\n        <Link to={`quote/${quote.id}`}>\n          <blockquote className={classes.otroBlockquote}>\n            cytat: {quote.text}\n            <span>{quote.author}</span>\n          </blockquote>\n        </Link>\n        <div className={classes.quoteFooter}>\n          {authCtx.isLoggedIn && (\n            <div className={classes.vote}>\n              <button\n                onClick={() => voteHandler(true)}\n                className={isVotedUp ? classes.votedUp : classes.notVoted}\n              >\n                <i className=\"fas fa-arrow-up\"></i>\n              </button>\n              <p>{quote.vote}</p>\n              <button\n                onClick={() => voteHandler(false)}\n                className={isVotedDown ? classes.votedDown : classes.notVoted}\n              >\n                <i className=\"fas fa-arrow-down\"></i>\n              </button>\n            </div>\n          )}\n          {!authCtx.isLoggedIn && (\n            <div className={classes.vote} onClick={canNotVoteHandler}>\n              <button\n                onClick={() => voteHandler(true)}\n                className={classes.notVoted}\n                disabled\n              >\n                <i className=\"fas fa-arrow-up\"></i>\n              </button>\n              <p>{quote.vote}</p>\n              <button\n                onClick={() => voteHandler(false)}\n                className={classes.notVoted}\n                disabled\n              >\n                <i className=\"fas fa-arrow-down\"></i>\n              </button>\n            </div>\n          )}\n          <Link to={`quote/${quote.id}`}>\n            <div className={classes.commentsIcon}>\n              <i className=\"far fa-comment-alt\"></i>\n              <p>{quote.commentsAmount} Comments</p>\n            </div>\n          </Link>\n          {isAuth && (\n            <button onClick={deleteHandler} className={classes.deleteBtn}>\n              <i class=\"fas fa-trash-alt\"></i>\n              <p> usuń cytat</p>\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Quote;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import React from \"react\";\nimport { Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Quote from \"./Quote\";\nimport LoadingSpinner from \"./UI/LoadingSpinner\";\nimport { quotesActions } from \"../store/quote-slice\";\n\nimport classes from \"./MainContent.module.css\";\n\nconst MainContent = () => {\n  const quotes = useSelector((state) => state.quotes.quotes);\n  const quoteIsLoading = useSelector((state) => state.quotes.quotesIsLoading);\n  const dispatch = useDispatch();\n\n  const clickHandler = (sortMethod) => {\n    dispatch(quotesActions.setSortingMethod(sortMethod));\n    dispatch(quotesActions.sortQuotes());\n  };\n\n  const list = quotes.map((quote, index) => {\n    return (\n      <li key={quote.id} className={classes.quote}>\n        <Quote index={index} />\n      </li>\n    );\n  });\n\n  return (\n    <Fragment>\n      {quoteIsLoading && <LoadingSpinner />}\n\n      {!quoteIsLoading && (\n        <ul className={classes.list}>\n          <div className={classes.sortButtons}>\n            <button onClick={() => clickHandler(true)}>\n              <i class=\"fas fa-sort-amount-up-alt\"></i>\n            </button>\n            <button onClick={() => clickHandler(false)}>\n              <i class=\"fas fa-sort-amount-down\"></i>\n            </button>\n          </div>\n          {list}\n        </ul>\n      )}\n    </Fragment>\n  );\n};\n\nexport default MainContent;\n","import React, { useState, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport AuthContext from \"../context/auth-context\";\nimport { quotesActions } from \"../store/quote-slice\";\nimport { uiActions } from \"../store/ui-slice\";\n\nimport classes from \"./AddNewQuote.module.css\";\n\nconst schema = yup.object().shape({\n  autor: yup.string().required(),\n  quote: yup\n    .string()\n    .required(\"No quote provided.\")\n    .min(8, \"quote is too short - should be 8 chars minimum.\")\n    .matches(/[a-zA-Z]/, \"quote can only contain Latin letters.\"),\n});\n\nconst AddNewQuote = (props) => {\n  const [isAcordeonOpen, setAcordeonOpen] = useState(false);\n  const dispatch = useDispatch();\n  const authCtx = useContext(AuthContext);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n\n  const acordeonClickHandler = () => {\n    setAcordeonOpen((prevState) => !prevState);\n  };\n\n  const submintHandler = (data) => {\n    const enteredAutor = data.autor;\n    const enteredQuote = data.quote;\n    dispatch(\n      quotesActions.addQuote({\n        text: enteredQuote,\n        user: authCtx.userName,\n        author: enteredAutor,\n        userId: authCtx.userId,\n        userName: authCtx.userName,\n      })\n    );\n    reset();\n    dispatch(quotesActions.sortQuotes());\n    setAcordeonOpen(false);\n    dispatch(\n      uiActions.openNotification({\n        isNotificationOpen: true,\n        message: \"Cytat został dodany\",\n        title: \"Cytat został dodany\",\n        status: \"success\",\n      })\n    );\n    setTimeout(() => {\n      dispatch(uiActions.closeNotification());\n    }, 4000);\n  };\n\n  return (\n    <section className={classes.container}>\n      <div className={classes.acordeon} onClick={acordeonClickHandler}>\n        Dodaj nowy cytat\n        <span className={classes.icon}>\n          <i className={isAcordeonOpen ? classes.open : classes.closed}></i>\n        </span>\n      </div>\n\n      <CSSTransition\n        in={isAcordeonOpen}\n        timeout={500}\n        mountOnEnter\n        unmountOnExit\n        classNames={{\n          enter: classes.slideEnter,\n          enterActive: classes.slideEnterActive,\n          exit: classes.slideExit,\n          exitActive: classes.slideExitActive,\n        }}\n      >\n        <div className={classes.acordeonContainer}>\n          <h2>Wpisz imię autora i cytat który chcesz dodać</h2>\n          <form\n            onSubmit={handleSubmit(submintHandler)}\n            className={classes.form}\n          >\n            <div className={classes.autor}>\n              <label htmlFor=\"author\">Author: </label>\n              <input\n                {...register(\"autor\")}\n                type=\"text\"\n                id=\"author\"\n                className={errors.autor && classes.invalid}\n              />\n              <p className={classes.error}>{errors.autor?.message}</p>\n            </div>\n            <div className={classes.quote}>\n              <label htmlFor=\"quote\">Cytat: </label>\n              <textarea\n                {...register(\"quote\")}\n                type=\"text\"\n                id=\"quote\"\n                className={errors.quote && classes.invalid}\n              />\n              <p className={classes.error}>{errors.quote?.message}</p>\n            </div>\n            <button className={classes.submit}>dodaj cytat</button>\n          </form>\n        </div>\n      </CSSTransition>\n    </section>\n  );\n};\n\nexport default AddNewQuote;\n","import { useState, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport { uiActions } from \"../store/ui-slice\";\n\nimport classes from \"./AuthPage.module.css\";\n\n// import classes from \"./AuthForm.module.css\";\nimport AuthContext from \"../context/auth-context\";\n\nconst schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup\n    .string()\n    .required(\"No password provided.\")\n    .min(8, \"Password is too short - should be 8 chars minimum.\")\n    .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\"),\n});\n\nconst AuthPage = () => {\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  // const emailInputRef = useRef();\n  // const passwordInputRef = useRef();\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const authCtx = useContext(AuthContext);\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (data) => {\n    const enterdEmail = data.email;\n    const enteredPassword = data.password;\n\n    setIsLoading(true);\n    let url;\n\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCcQn6nzjLMzAdbJkC462HyFgAYzd508To\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCcQn6nzjLMzAdbJkC462HyFgAYzd508To\";\n    }\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enterdEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \" application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + data.expiresIn * 1000\n        );\n\n        const userName = data.email.substring(0, data.email.lastIndexOf(\"@\"));\n        const userEmail = data.email;\n\n        authCtx.login(\n          data.idToken,\n          data.localId,\n          expirationTime.toISOString(),\n          userName,\n          userEmail\n        );\n        history.replace(\"/\");\n\n        // notfication\n        dispatch(\n          uiActions.openNotification({\n            isNotificationOpen: true,\n            title: `${isLogin ? \"Login\" : \"SignIn\"} Successful`,\n            message: `${\n              isLogin ? \"zalogowałeś\" : \"zarejestrowałeś\"\n            } się jako ${userEmail}`,\n            status: \"success\",\n          })\n        );\n        setTimeout(() => {\n          dispatch(uiActions.closeNotification());\n        }, 4000);\n      })\n      .catch((err) => {\n        //notification\n        dispatch(\n          uiActions.openNotification({\n            isNotificationOpen: true,\n            icationOpen: true,\n            title: `${isLogin ? \"Login\" : \"SignIn\"} Failed`,\n            message: `${err}`,\n            status: \"error\",\n          })\n        );\n        setTimeout(() => {\n          dispatch(uiActions.closeNotification());\n        }, 4000);\n      });\n  };\n\n  return (\n    <section className={classes.container}>\n      <section className={classes.header}>\n        <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n\n        {isLogin && (\n          <div>\n            <p>jesteś tutaj nowy? </p>\n            <span onClick={switchAuthModeHandler}> Zarejestruj się</span>\n          </div>\n        )}\n        {!isLogin && (\n          <div>\n            <p>Jesteś już jednym z nas? </p>\n            <span onClick={switchAuthModeHandler}> Zaloguj się</span>\n          </div>\n        )}\n      </section>\n\n      <form onSubmit={handleSubmit(submitHandler)} className={classes.form}>\n        <div className={classes.email}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input\n            {...register(\"email\")}\n            type=\"email\"\n            id=\"email\"\n            required\n            className={errors.email && classes.invalid}\n          />\n          <p className={classes.error}>{errors.email?.message}</p>\n        </div>\n        <div className={classes.password}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            {...register(\"password\")}\n            type=\"password\"\n            id=\"password\"\n            required\n            className={errors.password && classes.invalid}\n          />\n          <p className={classes.error}>{errors.password?.message}</p>\n        </div>\n        <div>\n          {!isLoading && (\n            <button className={classes.submit}>\n              {isLogin ? \"Zaloguj się\" : \"Zarejestruj się\"}\n            </button>\n          )}\n          {isLoading && <p>sending request... </p>}\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthPage;\n","import { useContext } from \"react\";\nimport AuthContext from \"../../context/auth-context\";\nimport { useHistory } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classes from \"./ProfileForm.module.css\";\n\nconst schema = yup.object().shape({\n  newPassword: yup\n    .string()\n    .required(\"No password provided.\")\n    .min(8, \"Password is too short - should be 8 chars minimum.\")\n    .matches(/[a-zA-Z]/, \"Password can only contain Latin letters.\"),\n});\n\nconst ProfileForm = () => {\n  const authCtx = useContext(AuthContext);\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n\n  const submitHandler = (data) => {\n    const enteredPassword = data.newPassword;\n\n    fetch(\n      \"https://identitytoolkit.googleapis.com/v1/accounts:update?key=AIzaSyCcQn6nzjLMzAdbJkC462HyFgAYzd508To\",\n      {\n        method: \"POST\",\n        body: JSON.stringify({\n          idToken: authCtx.token,\n          password: enteredPassword,\n          returnSecureToken: false,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((res) => {\n        history.replace(\"/\");\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <form onSubmit={handleSubmit(submitHandler)} className={classes.form}>\n      <h2> Tu możesz zmienić swoje hasło</h2>\n      <label htmlFor=\"newPassword\" className={classes.title}>\n        Wpisz nowe hasło:\n      </label>\n      <input\n        {...register(\"newPassword\")}\n        placeholder=\"new password\"\n        type=\"password\"\n        id=\"newPassword\"\n        name=\"newPassword\"\n        className={classes.input && classes.invalid}\n      />\n      <p className={classes.error}>{errors.newPassword?.message}</p>\n\n      <button type=\"submit\" className={classes.submit}>\n        Change Password\n      </button>\n    </form>\n  );\n};\n\nexport default ProfileForm;\n","import ProfileForm from \"./ProfileForm\";\nimport classes from \"./UserProfile.module.css\";\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.container}>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import React from \"react\";\nimport classes from \"./DarkModeButton.module.css\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst DarkModeButton = () => {\n  const isDarkMode = useSelector((state) => state.ui.isDarkMode);\n  const dispatch = useDispatch();\n\n  const themeToggleHandler = () => {\n    dispatch(uiActions.toggleDarkMode());\n  };\n\n  return (\n    <button\n      onClick={themeToggleHandler}\n      className={`${classes.Button} ${\n        isDarkMode ? classes.dark : classes.light\n      }`}\n    >\n      <i class=\"fas fa-sun\"></i>\n      <i class=\"fas fa-moon\"></i>\n\n      {/* {isDarkMode ? <i class=\"fas fa-moon\"></i> : <i class=\"fas fa-sun\"></i>} */}\n    </button>\n  );\n};\n\nexport default DarkModeButton;\n","import React from \"react\";\n\nimport { NavLink } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport DarkModeButton from \"./DarkModeButton\";\n\nimport { uiActions } from \"../../store/ui-slice\";\nimport AuthContext from \"../../context/auth-context\";\n\nimport classes from \"./BurgerMenu.module.css\";\nimport { Fragment } from \"react\";\n\nconst BurgerMenu = (props) => {\n  const isBurgerMenuOpen = useSelector((state) => state.ui.isBurgerMenuOpen);\n  const dispatch = useDispatch();\n\n  const authCtx = useContext(AuthContext);\n  const isLoggedIn = authCtx.isLoggedIn;\n\n  const clickHandler = () => {\n    dispatch(uiActions.toggleBurgerMenu());\n  };\n\n  return (\n    <Fragment>\n      <CSSTransition\n        in={isBurgerMenuOpen}\n        timeout={700}\n        mountOnEnter\n        unmountOnExit\n        classNames={{\n          enter: classes.slideEnter,\n          enterActive: classes.slideEnterActive,\n          exit: classes.slideExit,\n          exitActive: classes.slideExitActive,\n        }}\n      >\n        <section className={classes.container}>\n          {isLoggedIn && (\n            <div className={classes.whoIsLogged}>\n              <p>zalogowany jako</p>\n              <p>{authCtx.userEmail}</p>\n            </div>\n          )}\n          <ul className={classes.menu}>\n            <NavLink exact activeClassName={classes.activeLink} to=\"/\">\n              <li onClick={clickHandler}>strona główna</li>\n            </NavLink>\n            {!isLoggedIn && (\n              <NavLink exact activeClassName={classes.activeLink} to=\"/login\">\n                <li onClick={clickHandler}>zaloguj się</li>\n              </NavLink>\n            )}\n            {isLoggedIn && (\n              <NavLink exact activeClassName={classes.activeLink} to=\"/profile\">\n                <li onClick={clickHandler}>twój profil</li>\n              </NavLink>\n            )}\n            <NavLink exact activeClassName={classes.activeLink} to=\"/contact\">\n              <li onClick={clickHandler}>About me</li>\n            </NavLink>\n\n            <DarkModeButton />\n          </ul>\n        </section>\n      </CSSTransition>\n      <CSSTransition\n        in={isBurgerMenuOpen}\n        timeout={700}\n        mountOnEnter\n        unmountOnExit\n        classNames={{\n          enter: classes.fadeEnter,\n          enterActive: classes.fadeEnterActive,\n          exit: classes.fadeExit,\n          exitActive: classes.fadeExitActive,\n        }}\n      >\n        <div className={classes.overlay} onClick={clickHandler}></div>\n      </CSSTransition>\n    </Fragment>\n  );\n};\n\nexport default BurgerMenu;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\nimport { useSelector } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport classes from \"./Modal.module.css\";\n\nconst Modal = () => {\n  const isModalOpen = useSelector((state) => state.ui.isModalOpen);\n  const dispatch = useDispatch();\n\n  const clickHandler = () => {\n    dispatch(uiActions.closeModal());\n  };\n\n  return (\n    <CSSTransition\n      in={isModalOpen}\n      timeout={400}\n      mountOnEnter\n      unmountOnExit\n      classNames={{\n        enter: classes.slideEnter,\n        enterActive: classes.slideEnterActive,\n        exit: classes.slideExit,\n        exitActive: classes.slideExitActive,\n      }}\n    >\n      <div className={classes.modal}>\n        <div className={classes.overlay} onClick={clickHandler}></div>\n        <div className={classes.card}>\n          <div className={classes.modalHeader}>\n            <p>jakis tekst</p>\n            <button className={classes.modalBtn} onClick={clickHandler}>\n              <div className={classes.cross1}>\n                <div className={classes.cross2}></div>\n              </div>\n            </button>\n          </div>\n          <div className={classes.modalContent}>\n            <p>\n              Aby w pełni skorzystać z tej strony załóz konto albo skorzystaj z{\" \"}\n            </p>\n            <br></br>\n            <p>email: test@test.com</p>\n            <p>password: password123</p>\n          </div>\n        </div>\n      </div>\n    </CSSTransition>\n  );\n};\n\nexport default Modal;\n","import { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nimport classes from \"./CommentEditForm.module.css\";\n\nconst schema = yup.object().shape({\n  comment: yup\n    .string()\n    .required(\"No comment provided.\")\n    .min(3, \"quote is too short - should be at least 3 chars minimum.\")\n    .matches(/[a-zA-Z]/, \"quote can only contain Latin letters.\"),\n});\n\nconst CommentEditForm = (props) => {\n  // const commentTextRef = useRef();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n\n  const submitHandler = (data) => {\n    // event.preventDefault();\n    // const editedText = commentTextRef.current.value;\n    const editedText = data.comment;\n    props.editForm(editedText);\n    reset();\n  };\n  return (\n    <form onSubmit={handleSubmit(submitHandler)} className={classes.form}>\n      <label htmlFor=\"comment\" className={classes.label}>\n        wpisz nowy komentarz\n      </label>\n      <textarea {...register(\"comment\")} id=\"comment\" rows=\"5\"></textarea>\n      {errors.comment && (\n        <p className={classes.error}>{errors.comment?.message}</p>\n      )}\n      <button>zmień komentarz</button>\n    </form>\n  );\n};\nexport default CommentEditForm;\n","import { useDispatch } from \"react-redux\";\nimport { useContext, useState } from \"react\";\nimport CommentEditForm from \"./CommentEditForm\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport { quotesActions } from \"../../store/quote-slice\";\nimport classes from \"./Comment.module.css\";\nimport AuthContext from \"../../context/auth-context\";\nimport { Fragment } from \"react\";\nimport { uiActions } from \"../../store/ui-slice\";\n\nconst Comment = (props) => {\n  const dispatch = useDispatch();\n  const [isEdit, setIsEdit] = useState(false);\n\n  const authCtx = useContext(AuthContext);\n  const isAuth = authCtx.userId === props.userId;\n\n  const removeOneComment = () => {\n    dispatch(quotesActions.deletecomment({ id: props.id, index: props.index }));\n    dispatch(\n      uiActions.openNotification({\n        isNotificationOpen: true,\n        title: \"comment successfully removed\",\n        message: \"komentarz został usunięty \",\n        status: \"success\",\n      })\n    );\n    setTimeout(() => {\n      dispatch(uiActions.closeNotification());\n    }, 4000);\n  };\n\n  const edittingHandler = () => {\n    setIsEdit((prevState) => !isEdit);\n  };\n\n  const editOneComment = (editedText) => {\n    dispatch(\n      quotesActions.editComment({\n        id: props.id,\n        index: props.index,\n        editedText,\n      })\n    );\n    dispatch(\n      uiActions.openNotification({\n        isNotificationOpen: true,\n        title: \"comment succesfully edited\",\n        message: \"komentarz został  zmieniony\",\n        status: \"success\",\n      })\n    );\n    setTimeout(() => {\n      dispatch(uiActions.closeNotification());\n    }, 4000);\n    edittingHandler();\n  };\n\n  return (\n    <Fragment>\n      <div className={classes.commentHeader}>\n        <p>{props.userName}</p>\n        <p> {props.date}</p>\n      </div>\n      <div className={classes.mainComment}>\n        <p>{props.commentText}</p>\n\n        {isAuth && (\n          <button onClick={removeOneComment} className={classes.btn}>\n            usuń komentarz{\" \"}\n          </button>\n        )}\n        {isAuth && (\n          <button onClick={edittingHandler} className={classes.btn}>\n            {isEdit ? \"zakończ edycje\" : \"edytuj\"}\n          </button>\n        )}\n        <CSSTransition\n          in={isEdit}\n          timeout={500}\n          mountOnEnter\n          unmountOnExit\n          classNames={{\n            enter: classes.slideEnter,\n            enterActive: classes.slideEnterActive,\n            exit: classes.slideExit,\n            exitActive: classes.slideExitActive,\n          }}\n        >\n          {/* {isEdit && <CommentEditForm editForm={editOneComment} />} */}\n          <CommentEditForm editForm={editOneComment} />\n        </CSSTransition>\n      </div>\n    </Fragment>\n  );\n};\nexport default Comment;\n","import { useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport AuthContext from \"../../context/auth-context\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport classes from \"./AddComment.module.css\";\n\nimport { quotesActions } from \"../../store/quote-slice\";\nimport { uiActions } from \"../../store/ui-slice\";\n\nconst schema = yup.object().shape({\n  comment: yup\n    .string()\n    .required(\"No comment provided.\")\n    .min(3, \"quote is too short - should be at least 3 chars minimum.\")\n    .matches(/[a-zA-Z]/, \"quote can only contain Latin letters.\"),\n});\n\nconst AddComment = (props) => {\n  // const commentTextRef = useRef();\n  const dispatch = useDispatch();\n  const authCtx = useContext(AuthContext);\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ resolver: yupResolver(schema) });\n\n  const submitFormHandler = (data) => {\n    const enteredText = data.comment;\n    dispatch(\n      quotesActions.addComment({\n        id: props.id,\n        text: enteredText,\n        userId: authCtx.userId,\n        userName: authCtx.userName,\n      })\n    );\n    reset();\n    dispatch(\n      uiActions.openNotification({\n        isNotificationOpen: true,\n        message: \"Komentarz został dodany\",\n        title: \"Komentarz został dodany\",\n        status: \"success\",\n      })\n    );\n    setTimeout(() => {\n      dispatch(uiActions.closeNotification());\n    }, 4000);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(submitFormHandler)} className={classes.form}>\n      <label htmlFor=\"comment\">Komentarze</label>\n      <div className={classes.commentBox}>\n        <textarea\n          {...register(\"comment\")}\n          id=\"comment\"\n          rows=\"5\"\n          className={errors.comment && classes.invalid}\n        ></textarea>\n        {errors.comment && (\n          <p className={classes.error}>{errors.comment?.message}</p>\n        )}\n\n        <button className={classes.btn}>Add Comment</button>\n      </div>\n    </form>\n  );\n};\nexport default AddComment;\n","import React, { Fragment, useState, useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Comment from \"./Comment\";\nimport AddComment from \"./AddComment\";\nimport classes from \"./CommentList.module.css\";\nimport AuthContext from \"../../context/auth-context\";\n\nconst CommnetsLists = (props) => {\n  const [isCommentsOpen, setCommentsOpen] = useState(true);\n  const authCtx = useContext(AuthContext);\n  const comments = useSelector((state) => state.quotes.comments);\n  let foundComment = comments.findIndex((c) => c.id === props.id);\n\n  const clickHandler = () => {\n    setCommentsOpen((prevState) => !prevState);\n  };\n\n  let commentsList = <p> brak komentarzy </p>;\n\n  if (foundComment >= 0 && comments[foundComment].comments !== undefined) {\n    commentsList = comments[foundComment].comments.map((comment, index) => {\n      return (\n        <li className={classes.comment} key={index}>\n          <Comment\n            commentText={comment.text}\n            date={comment.date}\n            userId={comment.userId}\n            userName={comment.userName}\n            index={index}\n            id={props.id}\n          />\n        </li>\n      );\n    });\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.container}>\n        {authCtx.isLoggedIn && <AddComment id={props.id} />}\n\n        <button onClick={clickHandler} className={classes.btnShowComments}>\n          {isCommentsOpen ? \"zwiń komentarze\" : \"pokarz komentarze\"}\n        </button>\n        <CSSTransition\n          in={isCommentsOpen}\n          timeout={400}\n          mountOnEnter\n          unmountOnExit\n          classNames={{\n            enter: classes.slideEnter,\n            enterActive: classes.slideEnterActive,\n            exit: classes.slideExit,\n            exitActive: classes.slideExitActive,\n          }}\n        >\n          <div className={classes.list}>{commentsList}</div>\n        </CSSTransition>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CommnetsLists;\n","import { Fragment, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchComments } from \"../store/comments-actions\";\n\nimport CommentsList from \"./comments/CommentsList\";\n// import LoadingSpinner from \"./UI/LoadingSpinner\";\nimport classes from \"./QuotePage.module.css\";\n\nconst QuotePage = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const id = params.id;\n\n  useEffect(() => {\n    dispatch(fetchComments());\n  }, [dispatch]);\n\n  const quotes = useSelector((state) => state.quotes.quotes);\n  // const commentsAreLoading = useSelector(\n  //   (state) => state.quotes.commentsAreLoading\n  // );\n\n  let selectedQuote = quotes.filter((quote) => quote.id === id)[0] || {};\n\n  return (\n    <Fragment>\n      <div className={classes.mainQuote}>\n        <blockquote className={classes.otroBlockquote}>\n          cytat: {selectedQuote.text}\n          <span>{selectedQuote.author}</span>\n        </blockquote>\n\n        {/* {commentsAreLoading && <LoadingSpinner />} */}\n        {/* {!commentsAreLoading && <CommentsList id={selectedQuote.id} />} */}\n        <CommentsList id={selectedQuote.id} />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default QuotePage;\n","import { quotesActions } from \"../store/quote-slice\";\n\nexport const fetchComments = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://quotes-573dd-default-rtdb.firebaseio.com/comments.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"fetch cart data faild\");\n      }\n\n      const fetchedData = await response.json();\n      return fetchedData;\n    };\n    try {\n      // dispatch(quotesActions.commentsAreLoading());\n      const commentsData = await fetchData();\n      await dispatch(\n        quotesActions.replaceComments({\n          comments: commentsData || [],\n        })\n      );\n      // await dispatch(quotesActions.commentsAreDownload());\n      // dispatch(\n      //   uiActions.showNotification({\n      //     message: \"downloading cart data successfuly\",\n      //     title: \"succes\",\n      //     status: \"success\",\n      //   })\n      // );\n    } catch (error) {\n      console.log(error);\n      // dispatch();\n      // uiActions.showNotification({\n      //   message: \"fetching cart data faild\",\n      //   title: \"error\",\n      //   status: \"error\",\n      // })\n    }\n  };\n};\n\nexport const sendCommentsData = (comments) => {\n  return async (dispatch) => {\n    // dispatch(\n    //   quotesActions.showNotification({\n    //     title: \"Sending...\",\n    //     message: \"Sending data\",\n    //     status: \"pending\",\n    //   })\n    // );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://quotes-573dd-default-rtdb.firebaseio.com/comments.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            ...comments,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"send quotes data faild\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      // dispatch(\n      //   quotesActions.showNotification({\n      //     message: \"sending cart data successfuly\",\n      //     title: \"succes\",\n      //     status: \"success\",\n      //   })\n      // );\n    } catch (error) {\n      // dispatch(\n      //   quotesActions.showNotification({\n      //     message: \"sending cart data faild\",\n      //     title: \"error\",\n      //     status: \"error\",\n      //   })\n      // );\n    }\n  };\n};\n","import React from \"react\";\nimport { Fragment } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport classes from \"./ContactPage.module.css\";\n\nconst ContactPage = () => {\n  return (\n    <Fragment>\n      <ul className={classes.list}>\n        <h1>About me</h1>\n        <a target=\"_blank\" rel=\"noreferrer\" href=\"https://github.com/DenekD\">\n          <li>\n            <i class=\"fab fa-github\"></i>\n          </li>\n        </a>\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://www.facebook.com/tomasz.denkiewicz.1/\"\n        >\n          <li>\n            <i class=\"fab fa-facebook\"></i>\n          </li>\n        </a>\n        <a\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          href=\"https://www.linkedin.com/in/tomasz-denkiewicz-70700276/\"\n        >\n          <li>\n            <i class=\"fab fa-linkedin\"></i>\n          </li>\n        </a>\n      </ul>\n    </Fragment>\n  );\n};\nexport default ContactPage;\n","import { CSSTransition } from \"react-transition-group\";\nimport classes from \"./Notification.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { uiActions } from \"../../store/ui-slice\";\n\nconst Notification = (props) => {\n  const notification = useSelector((state) => state.ui.notification);\n\n  const dispatch = useDispatch();\n\n  const clickHandler = () => {\n    dispatch(uiActions.closeNotification());\n  };\n\n  let specialClasses = \"\";\n\n  if (notification.status === \"error\") {\n    specialClasses = classes.error;\n  }\n  if (notification.status === \"success\") {\n    specialClasses = classes.success;\n  }\n  if (notification.status === \"info\") {\n    specialClasses = classes.info;\n  }\n\n  const cssClasses = `${classes.notification} ${specialClasses}`;\n\n  return (\n    <CSSTransition\n      in={notification.isNotificationOpen}\n      timeout={700}\n      mountOnEnter\n      unmountOnExit\n      classNames={{\n        enter: classes.slideEnter,\n        enterActive: classes.slideEnterActive,\n        exit: classes.slideExit,\n        exitActive: classes.slideExitActive,\n      }}\n    >\n      <section className={cssClasses} onClick={clickHandler}>\n        <span></span>\n        <span>i</span>\n        <div className={classes.content}>\n          <h2>{notification.title}</h2>\n          <p>{notification.message}</p>\n        </div>\n\n        <div className={classes.cross1}>\n          <div className={classes.cross2}></div>\n        </div>\n      </section>\n    </CSSTransition>\n  );\n};\n\nexport default Notification;\n","// import \"./App.css\";\n\nimport React, { Suspense } from \"react\";\n\nimport Navbar from \"./components/Navbar\";\nimport MainContent from \"./components/MainContet\";\nimport AddNewQuote from \"./components/AddNewQuote\";\nimport AuthPage from \"./components/AuthPage\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport BurgerMenu from \"./components/UI/BurgerMenu\";\nimport Modal from \"./components/UI/Modal\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\nimport QuotePage from \"./components/QuotePage\";\nimport ContactPage from \"./components/ContactPage\";\nimport Notification from \"./components/UI/Notification\";\n\nimport { useEffect, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { sendQuotesData, fetchQuotes } from \"./store/quote-actions\";\nimport { sendCommentsData } from \"./store/comments-actions\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport AuthContext from \"./context/auth-context\";\nimport classes from \"./App.module.css\";\n\n// const QuotePage = React.lazy(() => import(\"./components/QuotePage\"));\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const quotes = useSelector((state) => state.quotes.quotes);\n  const comments = useSelector((state) => state.quotes.comments);\n  const quotesChanged = useSelector((state) => state.quotes.quotesChanged);\n  const commentsChanged = useSelector((state) => state.quotes.commentsChanged);\n  const isDarkMode = useSelector((state) => state.ui.isDarkMode);\n\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (quotesChanged) {\n      dispatch(sendQuotesData(quotes));\n    }\n    if (commentsChanged) {\n      dispatch(sendCommentsData(comments));\n    }\n  }, [dispatch, quotes, quotesChanged, comments, commentsChanged]);\n\n  useEffect(() => {\n    dispatch(fetchQuotes());\n  }, [dispatch]);\n\n  // const classes =\n  // <div  className={`${styles.class1} ${!isValid && styles.class2}`}></div>\n\n  return (\n    <div className={` ${isDarkMode ? classes.darkMode : classes.lightMode}`}>\n      <Modal />\n      <Navbar />\n      <BurgerMenu />\n      <Notification />\n      <Suspense\n        fallback={\n          <div className=\"centered\">\n            <LoadingSpinner />\n          </div>\n        }\n      >\n        <div className={classes.container}>\n          <Switch>\n            <Route path=\"/\" exact>\n              {authCtx.isLoggedIn && <AddNewQuote />}\n              <MainContent />\n            </Route>\n            <Route path=\"/login\" exact>\n              <AuthPage />\n            </Route>\n            <Route path=\"/contact\" exact>\n              <ContactPage />\n            </Route>\n            <Route path=\"/quote/:id\">\n              <QuotePage />\n            </Route>\n            <Route path=\"/profile\">\n              {authCtx.isLoggedIn && <UserProfile />}\n              {!authCtx.isLoggedIn && <Redirect to=\"/login\" />}\n            </Route>\n            <Route path=\"*\">\n              <Redirect to=\"/\" />\n            </Route>\n          </Switch>\n        </div>\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","import { quotesActions } from \"../store/quote-slice\";\n\nexport const fetchQuotes = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://quotes-573dd-default-rtdb.firebaseio.com/quotes.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"fetch cart data faild\");\n      }\n\n      const fetchedData = await response.json();\n      return fetchedData;\n    };\n    try {\n      dispatch(quotesActions.quotesAreLoading());\n      const quotesData = await fetchData();\n      dispatch(\n        quotesActions.replaceQuotes({\n          quotes: quotesData || [],\n        })\n      );\n      dispatch(quotesActions.quotesAreDownload());\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nexport const sendQuotesData = (quotes) => {\n  return async (dispatch) => {\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://quotes-573dd-default-rtdb.firebaseio.com/quotes.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n            ...quotes,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"send quotes data faild\");\n      }\n    };\n\n    try {\n      await sendRequest();\n    } catch (error) {}\n  };\n};\n\n// export const sendQuote = (quote) => {\n//   return async (dispatch) => {\n//     const sendRequest = async () => {\n//       const response = await fetch(\n//         \"https://quotes-573dd-default-rtdb.firebaseio.com/quotes.json\",\n//         {\n//           method: \"POST\",\n//           body: JSON.stringify({\n//             quotes: quote,\n//           }),\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"send quotes data faild\");\n//       }\n//     };\n\n//     try {\n//       await sendRequest();\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n// };\n","import { configureStore } from \"@reduxjs/toolkit\";\n// import commentsSlice from \"./comment-slice\";\nimport quoteSlice from \"./quote-slice\";\nimport uiSlice from \"./ui-slice\";\n\nconst store = configureStore({\n  reducer: {\n    quotes: quoteSlice.reducer,\n    ui: uiSlice.reducer,\n    // comments: commentsSlice.reducer,\n  },\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { AuthContextProvider } from \"./context/auth-context\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <BrowserRouter basename=\"/Quotes\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2YsFC\",\"card\":\"Modal_card__HiY5k\",\"modalBtn\":\"Modal_modalBtn__3s82e\",\"modalHeader\":\"Modal_modalHeader__2IRfV\",\"cross1\":\"Modal_cross1__2Kpur\",\"cross2\":\"Modal_cross2__2OXFh\",\"modalContent\":\"Modal_modalContent__3z-j8\",\"slideEnter\":\"Modal_slideEnter__3-9yZ\",\"slideEnterActive\":\"Modal_slideEnterActive__wXowh\",\"slideExit\":\"Modal_slideExit__13l5P\",\"slideExitActive\":\"Modal_slideExitActive__s21-z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3D5S5\",\"content\":\"Notification_content__3ONXd\",\"cross1\":\"Notification_cross1__rRc6B\",\"cross2\":\"Notification_cross2__3q8rU\",\"error\":\"Notification_error__2ILHS\",\"success\":\"Notification_success__3Ww1I\",\"info\":\"Notification_info__lVgUO\",\"slideEnter\":\"Notification_slideEnter__a0ECl\",\"slideEnterActive\":\"Notification_slideEnterActive__QVAbW\",\"slideExit\":\"Notification_slideExit__WzarA\",\"slideExitActive\":\"Notification_slideExitActive__x1Z7v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AuthPage_container__1lucN\",\"header\":\"AuthPage_header__3qGkv\",\"submit\":\"AuthPage_submit__1SuXU\",\"form\":\"AuthPage_form__2Bzsx\",\"error\":\"AuthPage_error__RvvlL\",\"email\":\"AuthPage_email__2q5cN\",\"password\":\"AuthPage_password__RBeEV\",\"invalid\":\"AuthPage_invalid__3d6Bl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentHeader\":\"Comment_commentHeader__2wdMR\",\"mainComment\":\"Comment_mainComment__3lLk9\",\"btn\":\"Comment_btn__7MqPY\",\"slideEnter\":\"Comment_slideEnter__3ZN0v\",\"slideEnterActive\":\"Comment_slideEnterActive__msRzN\",\"slideExit\":\"Comment_slideExit__15rro\",\"slideExitActive\":\"Comment_slideExitActive__ptrxq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CommentList_container__ys7K2\",\"list\":\"CommentList_list__2RPx-\",\"comment\":\"CommentList_comment__2R3OL\",\"btnShowComments\":\"CommentList_btnShowComments__Dutl8\",\"slideEnter\":\"CommentList_slideEnter__4u1Ep\",\"slideEnterActive\":\"CommentList_slideEnterActive__30PmO\",\"slideExit\":\"CommentList_slideExit__1SrRE\",\"slideExitActive\":\"CommentList_slideExitActive__18ku2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burger\":\"Hamburger_burger__2zCA8\",\"open\":\"Hamburger_open__2JqG-\",\"closed\":\"Hamburger_closed__1d26Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2xGgc\",\"invalid\":\"ProfileForm_invalid__2awvW\",\"error\":\"ProfileForm_error__2Tzt5\",\"submit\":\"ProfileForm_submit__35C9W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddComment_form__KzC3N\",\"commentBox\":\"AddComment_commentBox__l7HIE\",\"btn\":\"AddComment_btn__1rxr9\",\"invalid\":\"AddComment_invalid__1Dq4L\",\"error\":\"AddComment_error__DHGaN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Navbar_header__ghYTU\",\"burgerAndTitle\":\"Navbar_burgerAndTitle__MMIeH\",\"nav\":\"Navbar_nav__3VT01\",\"cog\":\"Navbar_cog__3McGb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"MainContent_quote__2MKIk\",\"list\":\"MainContent_list__1wjR9\",\"sortButtons\":\"MainContent_sortButtons__2NV1i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"DarkModeButton_Button__uJABp\",\"light\":\"DarkModeButton_light__1yKZo\",\"dark\":\"DarkModeButton_dark__WPe0S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"CommentEditForm_form__3146M\",\"error\":\"CommentEditForm_error__3y5zL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"darkMode\":\"App_darkMode__2TPkn\",\"lightMode\":\"App_lightMode__2ijaz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainQuote\":\"QuotePage_mainQuote__1yeEf\",\"otroBlockquote\":\"QuotePage_otroBlockquote___IBDo\"};"],"sourceRoot":""}